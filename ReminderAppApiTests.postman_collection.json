{
	"info": {
		"_postman_id": "f1a29004-15f2-4919-81b8-79bb5ed771d9",
		"name": "ReminderAppApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all reminders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.collectionVariables.set(\"testId\", responseJson[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3001/api/reminders",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3001/api/reminders/{{testId}}",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders",
						"{{testId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by non-existing id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Not found\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404, 400]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3001/api/reminders/604a766a2055ef37d80ae884",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders",
						"604a766a2055ef37d80ae884"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post new reminder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.collectionVariables.set(\"testId\", responseJson.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Postman test\",\r\n    \"timestamp\": \"2021-12-12T12:12:12\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/api/reminders",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post new reminder duplicate name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bad request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Postman test\",\r\n    \"timestamp\": \"2021-12-12T12:12:12\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/api/reminders",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post new reminder no name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bad request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"timestamp\": \"2021-12-12T12:12:12\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/api/reminders",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post new reminder no timestamp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bad request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Postman test asdasdasdasdasdasda\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/api/reminders",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete created reminder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/api/reminders/{{testId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders",
						"{{testId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete non-existing reminder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Not found or malformed request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404, 400]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/api/reminders/604a766a2055ef37d80ae884",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"reminders",
						"604a766a2055ef37d80ae884"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "testId",
			"value": null
		}
	]
}